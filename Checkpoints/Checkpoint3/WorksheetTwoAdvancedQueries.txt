1. Provide a list of customer names, along with the total dollar amount each customer has spent.
        SELECT        First_Name, Last_Name, SUM(Price)
        FROM CUSTOMER
        JOIN PURCHASE ON CUSTOMER.Cust_Id = PURCHASE.Cust_Id
        GROUP BY Cust_Id;






   2. Provide a list of customer names and e-mail addresses for customers who have spent more than the average customer.
        SELECT First_Name, Last_Name, Email
        FROM CUSTOMER
        JOIN PURCHASE ON CUSTOMER.Cust_Id = PURCHASE.Cust_Id
        WHERE Cust_id IN 
(SELECT Cust_ID
                   FROM Purchase
                    GROUP BY Cust_ID
                   HAVING SUM(Total_Price) > (
                                SELECT AVG(total_spent)
                                FROM 
(SELECT Cust_ID, SUM(Total_Price)
FROM Purchase
GROUP BY Cust_ID
                                        ) 
                    )
        


   3. Provide a list of the titles in the database and associated total copies sold to customers, sorted from the title that has sold the most individual copies to the title that has sold the least.


SELECT Title, SUM(Quantity) as Total_Sold
FROM PURCHASE
JOIN BOOKS ON PURCHASE.Order_no = BOOKS.Order_no
JOIN BOOK ON BOOKS.ISBN = BOOK.ISBN
ORDER BY Total_Sold DESC
GROUP BY BOOK.ISBN;




   4. Provide a list of the titles in the database and associated dollar totals for copies sold to customers, sorted from the title that has sold the highest dollar amount to the title that has sold the smallest.
SELECT Title, SUM(Quantity) * BOOK.Price as Total_Profit
FROM BOOK
JOIN BOOKS ON BOOK.ISBN = BOOKS.ISBN
ORDER BY Total_Profit DESC
GROUP BY BOOK.ISBN;






   5. Find the most popular author in the database (i.e. the one who has sold the most books)
SELECT First_Name, Middle_Name, Last_Name
FROM PERSON
JOIN AUTHOR ON PERSON.Id = AUTHOR.Auth_Id
JOIN CUSTOMER ON PERSON.Id = CUSTOMER.Cust_Id
JOIN PURCHASE ON CUSTOMER.Cust_Id = PURCHASE.Cust_Id
JOIN AUTHOR ON WRITES.Auth_Id = AUTHOR.Auth_Id
ORDER BY COUNT(WRITES.ISBN) DESC


   6. Find the most profitable author in the database for this store (i.e. the one who has brought in the most money)


SELECT First_Name, Last_Name SUM(BOOK_SUM.Total_Profit) as Author_Profit
FROM (
SELECT ISBN, SUM(Quantity) * BOOKS.PRICE as Total_Profit
FROM BOOKS
GROUP BY ISBN
        ) as BOOK_SUM
JOIN BOOK ON BOOK_SUM.ISBN = BOOK.ISBN
JOIN WRITES ON BOOK.ISBN = WRITES.ISBN
JOIN AUTHOR ON WRITES.Auth_Id = AUTHOR.Auth_Id
JOIN PERSON ON AUTHOR.Auth_Id = PERSON.ID
ORDER BY Author_Profit DESC
GROUP BY AUTHOR.Auth_Id
LIMIT 1;


   7. Provide a list of customer information for customers who purchased anything written by the most profitable author in the database.
                SELECT c.*
FROM Customer c
JOIN Purchase p ON c.Cust_ID = p.Cust_ID
JOIN Book b ON p.ISBN = b.ISBN
JOIN Writes w ON b.ISBN = w.ISBN
WHERE w.Auth_ID = (
    SELECT w.Auth_ID
    FROM Writes w
    JOIN Book b ON w.ISBN = b.ISBN
    GROUP BY w.Auth_ID
    ORDER BY SUM(b.Price) DESC
    LIMIT 1
);


   8. Provide the list of authors who wrote the books purchased by the customers who have spent more than the average customer.
                SELECT a.*
FROM Author a
JOIN Writes w ON a.Auth_ID = w.Auth_ID
JOIN Book b ON w.ISBN = b.ISBN
JOIN Purchase p ON b.ISBN = p.ISBN
WHERE p.Total_Price > (
    SELECT AVG(Total_Price)
    FROM Purchase
);